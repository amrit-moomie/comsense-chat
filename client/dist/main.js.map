{"version":3,"sources":["./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/store/users.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login/login.component.ts","./src/app/login/login/login.component.html","./src/app/utilities/guid.ts","./src/app/shared/material/material.module.ts","./src/app/models/message.ts","./src/app/services/user.service.ts","./src/app/services/chat.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmG;AAElD;AAGR;;;;;;;;;;;;;ICO7B,0EACE;IAAA,qEAAqC;IACrC,0EACE;IAAA,0EACE;IAAA,oEACC;IAAA,uDACD;IAAA,4DAAI;IACJ,uEAAM;IAAA,uDAAa;IAAA,4DAAO;IAC1B,2EAAyB;IAAA,uDAA6B;;IAAA,4DAAO;IAC/D,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IANC,0DACD;IADC,uFACD;IACM,0DAAa;IAAb,6EAAa;IACM,0DAA6B;IAA7B,mKAA6B;;;IAI5D,0EACE;IAAA,0EACE;IAAA,oEACI;IAAA,uDACJ;IAAA,4DAAI;IACJ,2EAAyB;IAAA,uDAA4B;;IAAA,4DAAO;IAC9D,4DAAM;IACR,4DAAM;;;IAJE,0DACJ;IADI,uFACJ;IACyB,0DAA4B;IAA5B,iKAA4B;;;IAlBzD,sEACA;IAAA,kHAWM;IACN,iHAOM;IACR,4DAAM;;;IApBuB,0DAA4B;IAA5B,2FAA4B;IAY5B,0DAAwB;IAAxB,uFAAwB;;;IAyB7D,kFACE;IAAA,4EAAW;IAAA,iGAAsC;IAAA,4DAAY;IAC/D,4DAAkB;;ADvCb,MAAM,aAAa;IAQxB,YACS,WAAwB,EACvB,WAAwB,EACxB,OAAe,EACf,OAAe;QAHhB,gBAAW,GAAX,WAAW,CAAa;QACvB,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAQ;QACf,YAAO,GAAP,OAAO,CAAQ;QATzB,UAAK,GAAG,WAAW,CAAC;QACpB,eAAU,GAAW,EAAE,CAAC;QACxB,aAAQ,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;QACnD,aAAQ,GAAG,IAAI,KAAK,EAAW,CAAC;QAChC,YAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAOtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IACD,cAAc;QACZ,IAAI;YACA,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,YAAY,CAAC;SACtG;QAAC,OAAM,GAAG,EAAE,GAAG;IACpB,CAAC;IACC,WAAW;QACT,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,oDAAI,CAAC,OAAO,EAAE,CAAC;YACnC,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;YAC9D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACtB;IACH,CAAC;IAED,YAAY,CAAC,YAAiB;QAC5B,OAAO,CAAC,GAAG,CAAC,EAAC,YAAY,EAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;IACjC,CAAC;IAEO,iBAAiB;QAEvB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YAC9D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;gBACpB,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE;oBAC9D,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC;oBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC7B;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;0EAzDU,aAAa;6FAAb,aAAa;;;;;;QCZ1B,8EACE;QAAA,kFACE;QAAA,oEAAwD;QACxD,iFAAgB;QAAA,4EAAiB;QAAA,4DAAiB;QAClD,oFAAmB;QAAA,4EAAiB;QAAA,4DAAoB;QAC1D,4DAAkB;QAClB,mFACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EACE;QAAA,6EACE;QAAA,2GAqBI;QACN,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,6EAGA;QAFA,sLAAwB,6FACP,iBAAa,IADN;QADxB,4DAGA;QAAA,8EACE;QAD2C,sIAAS,iBAAa,IAAC;QAClE,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QAC3B,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;QACR,4DAAmB;QACnB,oIAEkB;QAClB,4DAAW;;QAzCoB,2DAAW;QAAX,iFAAW;QA0B9B,0DAAwB;QAAxB,mFAAwB;QAYlB,0DAA0C;QAA1C,0GAA0C;;6FDrCjD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;yUAEgC,iBAAiB;kBAA/C,uDAAS;mBAAC,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AEbvB;AAAA;AAAO,MAAM,KAAK,GAAY;IAC1B;QACI,OAAO,EAAE,8BAA8B;QACvC,MAAM,EAAE,OAAO;QACf,UAAU,EAAE,aAAa;QACzB,QAAQ,EAAE,CAAC;KACd;IACD;QACI,OAAO,EAAE,6BAA6B;QACtC,MAAM,EAAE,aAAa;QACrB,UAAU,EAAE,aAAa;QACzB,QAAQ,EAAE,CAAC;KACd;IACD;QACI,OAAO,EAAE,6BAA6B;QACtC,MAAM,EAAE,OAAO;QACf,UAAU,EAAE,aAAa;QACzB,QAAQ,EAAE,CAAC;KACd;IACD;QACI,OAAO,EAAE,oBAAoB;QAC7B,MAAM,EAAE,OAAO;QACf,UAAU,EAAE,aAAa;QACzB,QAAQ,EAAE,CAAC;KACd;IACD;QACI,OAAO,EAAE,mBAAmB;QAC5B,MAAM,EAAE,eAAe;QACvB,UAAU,EAAE,aAAa;QACzB,QAAQ,EAAE,CAAC;KACd;CAEJ,CAAC;;;;;;;;;;;;;AChCF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,0CAA0C;IAC1C,QAAQ,EAAE,6CAA6C;CACxD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICAlD,wEACA;IAAA,sEAAqB;IACrB,qEAAe;;;IAIf,uEAAuB;;ADChB,MAAM,YAAY;IACvB,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAE3C,CAAC;IACD,QAAQ;QACN,8DAA8D;QAC9D,8BAA8B;QAC9B,8BAA8B;QAC9B,mEAAmE;QACnE,+BAA+B;QAC/B,IAAI;IACN,CAAC;;wEAXU,YAAY;4FAAZ,YAAY;QCPzB,0HAEe;;QAGf,oMAGc;;;QARC,+JAAuC;;6FDOzC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACf;AACI;AACa;AACkB;AACpB;AACT;AACO;AACS;AACT;AACA;AACa;;AAoB5D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,kEAAW,EAAE,mEAAW,CAAC,YAR5B;YACP,0DAAW;YACX,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,yFAAoB;YACpB,gFAAc;SACf;mIAIU,SAAS,mBAflB,2DAAY;QACZ,2EAAc;QACd,kEAAa,aAGb,0DAAW;QACX,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,yFAAoB;QACpB,gFAAc;6FAKL,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,2EAAc;oBACd,kEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,0DAAW;oBACX,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,yFAAoB;oBACpB,gFAAc;iBACf;gBACD,SAAS,EAAE,CAAC,kEAAW,EAAE,mEAAW,CAAC;gBACrC,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AACxB;;;;;;;;;;ICEpC,4EACE;IAAA,0GACF;IAAA,4DAAY;;;IAIR,4EAA6C;IAAA,uDAAqB;IAAA,4DAAY;;;IAAjC,0DAAqB;IAArB,yFAAqB;;ADAvE,MAAM,cAAc;IAKzB,YACU,EAAe,EACf,WAAwB;QADxB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QAL3B,iBAAY,GAAG,KAAK,CAAC;QACpB,sBAAiB,GAAG,KAAK,CAAC;QAKhC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,KAAK,CAAC;YAC7B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IAAA,CAAC;IAEJ,QAAQ;IACR,CAAC;IAED,OAAO;QACL,6CAA6C;QAC7C,MAAM,IAAI,GAAG,yDAAK,CAAC,IAAI,CAAC,CAAC,GAAE,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/D,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;aAAM;YACL,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1C;IACH,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACpD,OAAO,wBAAwB,CAAC;SACjC;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;IAChE,CAAC;;4EAhCU,cAAc;8FAAd,cAAc;QCV3B,2EACI;QAAA,mFACE;QAAA,0EACE;QADuB,0IAAY,aAAS,IAAC;QAC7C,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACf,sHAEY;QACZ,oFACI;QAAA,4EAAW;QAAA,2EAAgB;QAAA,4DAAY;QACvC,sEACA;QAAA,wHAA8E;QAChF,4DAAiB;QACnB,qFACE;QAAA,uEACF;QAAA,4DAAiB;QACjB,6EAAmE;QAAA,iEAAK;QAAA,4DAAS;QACnF,4DAAO;QACT,4DAAmB;QACrB,4DAAW;;QAhBD,0DAAkB;QAAlB,+EAAkB;QAEV,0DAAkB;QAAlB,kFAAkB;QAMd,0DAA+B;QAA/B,+FAA+B;QAKL,0DAAwB;QAAxB,qFAAwB;;6FDL7D,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAO,MAAM,IAAI;IACb,MAAM,CAAC,OAAO;QACZ,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;YACvE,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,EAC5B,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACrC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,8BAA8B;AAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC5B,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;CACjB;;;;;;;;;;;;;ACdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACN;AACY;AACM;AACJ;AACI;AACO;AACX;AACE;AACF;AACA;AACM;AACG;AACT;AACM;;AAoCtD,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAhChB;YACP,4DAAY;YACZ,kEAAmB;YACnB,wEAAe;YACf,sEAAc;YACd,+EAAkB;YAClB,2EAAgB;YAChB,qEAAa;YACb,oEAAa;YACb,wEAAe;YACf,8EAAiB;YACjB,2EAAgB;YAChB,qEAAa;YACb,oEAAa;YACb,oEAAa;SACd,EAEC,kEAAmB;QACnB,wEAAe;QACf,sEAAc;QACd,+EAAkB;QAClB,2EAAgB;QAChB,qEAAa;QACb,oEAAa;QACb,wEAAe;QACf,8EAAiB;QACjB,2EAAgB;QAChB,qEAAa;QACb,oEAAa;QACb,oEAAa;mIAGJ,cAAc,cA/BvB,4DAAY;QACZ,kEAAmB;QACnB,wEAAe;QACf,sEAAc;QACd,+EAAkB;QAClB,2EAAgB;QAChB,qEAAa;QACb,oEAAa;QACb,wEAAe;QACf,8EAAiB;QACjB,2EAAgB;QAChB,qEAAa;QACb,oEAAa;QACb,oEAAa,aAGb,kEAAmB;QACnB,wEAAe;QACf,sEAAc;QACd,+EAAkB;QAClB,2EAAgB;QAChB,qEAAa;QACb,oEAAa;QACb,wEAAe;QACf,8EAAiB;QACjB,2EAAgB;QAChB,qEAAa;QACb,oEAAa;QACb,oEAAa;6FAGJ,cAAc;cAlC1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,wEAAe;oBACf,sEAAc;oBACd,+EAAkB;oBAClB,2EAAgB;oBAChB,qEAAa;oBACb,oEAAa;oBACb,wEAAe;oBACf,8EAAiB;oBACjB,2EAAgB;oBAChB,qEAAa;oBACb,oEAAa;oBACb,oEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,kEAAmB;oBACnB,wEAAe;oBACf,sEAAc;oBACd,+EAAkB;oBAClB,2EAAgB;oBAChB,qEAAa;oBACb,oEAAa;oBACb,wEAAe;oBACf,8EAAiB;oBACjB,2EAAgB;oBAChB,qEAAa;oBACb,oEAAa;oBACb,oEAAa;iBACd;aACF;;;;;;;;;;;;;;ACjDD;AAAA;AAAO,MAAM,OAAO;CAOjB;;;;;;;;;;;;;ACPH;AAAA;AAAA;AAAA;AAAA;AAA2C;AACJ;AACM;;AAGtC,MAAM,WAAW;IAEpB;QADA,iBAAY,GAA0B,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QAE7D,MAAM,YAAY,GAAI,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC3D,IAAI,YAAY,KAAI,IAAI,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kDAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SAC9E;IACJ,CAAC;;sEAPQ,WAAW;8FAAX,WAAW,WAAX,WAAW;6FAAX,WAAW;cADvB,wDAAU;;;;;;;;;;;;;;;;;;;;;;;ACH8C;AACkD;AACtE;AACwB;;;AAKtD,MAAM,WAAW;IAOtB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAN1C,oBAAe,GAAG,IAAI,0DAAY,EAAW,CAAC;QAC9C,0BAAqB,GAAG,IAAI,0DAAY,EAAW,CAAC;QAE7C,4BAAuB,GAAG,KAAK,CAAC;QAIrC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,OAAgB;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE;IACzD,CAAC;IAED,IAAI,OAAO;QACX,OAAO,qEAAW,CAAC,MAAM,GAAG,MAAM,CAAC;IACnC,CAAC;IAED,IAAI,YAAY;QACd,OAAO,qEAAW,CAAC,MAAM,GAAG,WAAW,CAAC;IACxC,CAAC;IACK,gBAAgB;QACtB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAO,CAAM,EAAE,EAAE,CAAC;YAChE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAElB,CAAC;IACK,eAAe,CAAC,QAAa;;YACjC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,wBAAwB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACzF,MAAM,OAAO,GAA2B;gBACtC,kBAAkB;gBAClB,kBAAkB,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,WAAW;gBAC9C,iBAAiB,EAAE,IAAI;gBACvB,GAAG;aACJ,CAAC;YACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,uEAAoB,EAAE;iBACtE,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC;iBAC9B,gBAAgB,CAAC,2DAAQ,CAAC,KAAK,CAAC;iBAChC,sBAAsB,EAAE;iBACxB,KAAK,EAAE,CAAC;YACT,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;KAAA;IAEO,eAAe;QACrB,IAAI,CAAC,cAAc;aAChB,KAAK,EAAE;aACP,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;YAChE,UAAU,CAAC,cAAc,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,sBAAsB;QAC5B,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,IAAS,EAAE,EAAE;YACjD,OAAO,CAAC,GAAG,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC;YACpB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;;sEAjEU,WAAW;8FAAX,WAAW,WAAX,WAAW;6FAAX,WAAW;cADvB,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACD;;;AAEtD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC,CAAC,CAAC;AAM5D,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { AfterViewChecked, Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Message } from 'src/app/models/message';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { UserService } from '../services/user.service';\nimport { Guid } from '../utilities/guid';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit, AfterViewChecked {\n  @ViewChild('scrollMe') private myScrollContainer: ElementRef;\n\n  title = 'ClientApp';\n  txtMessage: string = '';\n  uniqueID: string = new Date().getTime().toString();\n  messages = new Array<Message>();\n  message = new Message();\n  constructor(\n    public chatService: ChatService,\n    private userService: UserService,\n    private _ngZone: NgZone,\n    private _router: Router\n  ) {\n    this.subscribeToEvents();\n  }\n  ngAfterViewChecked(): void {\n    this.scrollToBottom();\n  }\n  ngOnInit(): void {\n    this.scrollToBottom();\n  }\n  scrollToBottom(): void {\n    try {\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n    } catch(err) { }                 \n}\n  sendMessage(): void {\n    if (this.txtMessage) {\n      this.message = new Message();\n      this.message.guid = Guid.newGuid();\n      this.message.clientUniqueId = this.uniqueID;\n      this.message.type = \"sent\";\n      this.message.text = this.txtMessage;\n      this.message.date = new Date();\n      this.message.owner = this.userService.currentUser$.value.name;\n      this.messages.push(this.message);\n      this.chatService.sendMessage(this.message);\n      this.txtMessage = '';\n    }\n  }\n\n  handleChange(messageValue: any): void {\n    console.log({messageValue});\n    this.txtMessage = messageValue;\n  }\n\n  private subscribeToEvents(): void {\n\n    this.chatService.messageReceived.subscribe((message: Message) => {\n      this._ngZone.run(() => {\n        if (message.owner !== this.userService.currentUser$.value.name) {\n          message.type = \"received\";\n          this.messages.push(message);\n        }\n      });\n    });\n  }\n\n}\n","<mat-card class=\"chat-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Comsense Chat App</mat-card-title>\n    <mat-card-subtitle>Development Group</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <div class=\"messaging\">\n      <div class=\"inbox_msg\">\n        <div class=\"mesgs\">\n          <div #scrollMe class=\"msg_history\">\n            <div *ngFor=\"let msg of messages\">\n            <div class=\"incoming_msg\" *ngIf=\"msg.type == 'received'\">\n              <div class=\"incoming_msg_img\"> </div>\n              <div class=\"received_msg\">\n                <div class=\"received_withd_msg\">\n                  <p>\n                   {{msg.text}} \n                  </p>\n                  <span>{{msg.owner}}</span>\n                  <span class=\"time_date\"> {{msg.date | date:'medium'}} </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"outgoing_msg\" *ngIf=\"msg.type == 'sent'\">\n              <div class=\"sent_msg\">\n                <p>\n                    {{msg.text}} \n                </p>\n                <span class=\"time_date\"> {{msg.date | date:'medium'}}</span>\n              </div>\n            </div>\n          </div>\n          </div>\n          <div class=\"type_msg\">\n            <div class=\"input_msg_write\">\n              <input type=\"text\" class=\"write_msg\" \n              [(ngModel)]=\"txtMessage\"\n              (keydown.enter)=\"sendMessage()\" placeholder=\"Type a message\" />\n              <button class=\"msg_send_btn\" mat-icon-button (click)=\"sendMessage()\">\n                <mat-icon>send</mat-icon>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n  \n    </div>\n  </mat-card-content>\n  <mat-card-footer *ngIf=\"!chatService.connectionIsEstablished\">\n    <mat-error>>>>>> waiting to connect to server....</mat-error>\n  </mat-card-footer>\n  </mat-card>","export const Users: User[] =  [\n    {\n        \"email\": \"amrit.moomie@comsenseinc.com\",\n        \"name\": \"Amrit\",\n        \"password\": \"comsense1;;\",\n        \"userId\": 1\n    },\n    {\n        \"email\": \"Mark.Comeau@comsenseinc.com\",\n        \"name\": \"Mark.Comeau\",\n        \"password\": \"comsense1;;\",\n        \"userId\": 2\n    },\n    {\n        \"email\": \"arash.sabet@comsenseinc.com\",\n        \"name\": \"Arash\",\n        \"password\": \"comsense1;;\",\n        \"userId\": 3\n    },\n    {\n        \"email\": \"wiebo@binaryops.ca\",\n        \"name\": \"Wiebo\",\n        \"password\": \"comsense1;;\",\n        \"userId\": 4\n    },\n    {\n        \"email\": \"mark@binaryops.ca\",\n        \"name\": \"Mark.Voorberg\",\n        \"password\": \"comsense1;;\",\n        \"userId\": 5\n    },\n\n];\n\nexport interface User {\n    email: string;\n    name: string;\n    password: string;\n    userId: number;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //\"hubUrl\": \"http://10.0.0.186:7071/api/\",\n  \"hubUrl\": \"https://comsensechat.azurewebsites.net/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './services/user.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(public userService: UserService) {\n\n  }\n  ngOnInit(): void {\n    // const userInStorage = localStorage.getItem(\"loggedInUser\");\n    // console.log(userInStorage);\n    // if(userInStorage !==null) {\n    // const user = Users.find(x=> x.userId === Number(userInStorage));\n    // this.currentUser$.next(user)\n    // }\n  }\n  \n}","<ng-container *ngIf=\"userService.currentUser$ | async as user; else loginTemplate\">\n<app-chat></app-chat>\n</ng-container>\n\n\n<ng-template #loginTemplate>\n<app-login></app-login>\n\n</ng-template>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { LoginComponent } from './login/login/login.component';\nimport { ChatService } from './services/chat.service';\nimport { UserService } from './services/user.service';\nimport { MaterialModule } from './shared/material/material.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChatComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NoopAnimationsModule,\n    MaterialModule\n  ],\n  providers: [ChatService, UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Users } from 'src/app/store/users';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  public loginInvalid = false;\n  private formSubmitAttempt = false;\n  private returnUrl: string;\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService) { \n    this.form = this.fb.group({\n    email: ['', Validators.email],\n    password: ['', Validators.required]\n  });}\n\n  ngOnInit(): void {\n  }\n\n  doLogin() {\n    // localStorage.setItem(\"loggedInUser\", \"1\");\n    const user = Users.find(x=> x.email === this.form.value.email);\n    if (user === undefined) {\n      this.loginInvalid = true;\n    } else {\n      localStorage.setItem(\"loggedInUser\", String(user.userId))\n      this.userService.currentUser$.next(user);\n    }\n  }\n\n  getErrorMessage() {\n    if (this.form.controls['email'].hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.form.controls['email'] ? 'Not a valid email' : '';\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"doLogin()\">\n        <h2>Log In</h2>\n        <mat-error *ngIf=\"loginInvalid\">\n          The username and password were not recognized\n        </mat-error>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Enter your email</mat-label>\n            <input matInput placeholder=\"pat@example.com\" formControlName=\"email\" required>\n            <mat-error *ngIf=\"form.get('email').invalid\">{{getErrorMessage()}}</mat-error>\n          </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!form.valid\">Login</button>\n      </form>\n    </mat-card-content>\n  </mat-card>","export class Guid {\n    static newGuid() {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n      });\n    }\n  }\n  \n  // Example of a bunch of GUIDs\n  for (var i = 0; i < 100; i++) {\n    var id = Guid.newGuid();\n    console.log(id);\n  }","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatIconModule,\n    MatListModule,\n  ],\n  exports: [\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatIconModule,\n    MatListModule,\n  ],\n})\nexport class MaterialModule { }\n","export class Message {\n    clientUniqueId: string\n    type: string;\n    text: string;\n    date: Date;\n    owner:string;\n    guid: string;\n  }","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { User, Users } from \"../store/users\";\n\n@Injectable()  \nexport class UserService {\n    currentUser$: BehaviorSubject<User> = new BehaviorSubject(null);\n    constructor() {\n       const loggedInUser =  localStorage.getItem(\"loggedInUser\");\n       if (loggedInUser !==null) {\n           this.currentUser$.next(Users.find(u => u.userId === Number(loggedInUser)));\n       }\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder, IHttpConnectionOptions, LogLevel } from '@microsoft/signalr';\nimport { tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Message } from '../models/message';\n\n  \n@Injectable()  \nexport class ChatService {  \n  messageReceived = new EventEmitter<Message>();  \n  connectionEstablished = new EventEmitter<Boolean>();  \n\n  public connectionIsEstablished = false;  \n  private _hubConnection: HubConnection;  \n  \n  constructor(private httpClient: HttpClient) { \n    console.log('here')\n    this.createConnection();  \n  }  \n  \n  sendMessage(message: Message) {  \n    this.httpClient.post(this.talkUrl, message).subscribe()\n  } \n\n  get talkUrl() {\n  return environment.hubUrl + 'talk';\n  }\n  \n  get negotiateUrl() {\n    return environment.hubUrl + 'negotiate';\n    }\n  private createConnection() {  \n    this.httpClient.get(this.negotiateUrl).pipe(tap(async (x: any) => {\n      this.handleNegotiate(x);\n    })).subscribe();\n\n  }\n  async handleNegotiate(response: any) {\n    console.log('NotificationHubClient', `Negotiation results: ${JSON.stringify(response)}`);\n    const options: IHttpConnectionOptions = {\n      // logger: logger,\n      accessTokenFactory: () => response.accessToken,\n      logMessageContent: true\n      //,\n    };\n    this._hubConnection = this._hubConnection || new HubConnectionBuilder()\n    .withUrl(response.url, options)\n    .configureLogging(LogLevel.Trace)\n    .withAutomaticReconnect()\n    .build();    \n    this.registerOnServerEvents();  \n    this.startConnection(); \n  }\n\n  private startConnection(): void {  \n    this._hubConnection  \n      .start()  \n      .then(() => {  \n        this.connectionIsEstablished = true;  \n        console.log('Hub connection started');  \n        this.connectionEstablished.emit(true);  \n      })  \n      .catch(err => {  \n        console.log('Error while establishing connection, retrying...');  \n        setTimeout(function () { this.startConnection(); }, 5000);  \n      });  \n  }  \n  \n  private registerOnServerEvents(): void {  \n    this._hubConnection.on('newMessage', (data: any) => {  \n      console.log({data});\n      this.messageReceived.emit(data);  \n    });  \n  }  \n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\n\nconst routes: Routes = [{ path: 'chat', component: ChatComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}